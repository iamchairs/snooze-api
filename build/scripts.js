angular.module("snoozeAPI",["ui.bootstrap"]),angular.module("snoozeAPI").controller("APIDocumentationCtrl",["$scope","API",function(a,b){a.selectedRoute=b.getSelectedRoute(),a.responseCodes={100:"Continue",101:"Switching Protocols",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",300:"Multiple Coices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",307:"Temporary Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Request Entity Too Large",414:"Request-URI Too Long",415:"Unsupported Media Type",416:"Requested Range Not Satisfiable",417:"Expectation Failed",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",506:"HTTP Version Not Supported"},a.getDTO=function(a){if("object"==typeof a){var c=[];for(var d in a){var e=a[d];e.name=d,c.push(e)}return a}var c=b.getDTO(a);return c.properties},a.toggleOpen=function(a){a.opened=void 0===a.opened?!0:!a.opened}}]),angular.module("snoozeAPI").controller("APIRoutesCtrl",["$scope","API",function(a,b){a.api={},a.api.name=b.getName(),a.routes=b.getRoutes(),a.selectedRoute="",a.selectRoute=function(c){a.selectedRoute=c,b.selectRoute(c)}}]),angular.module("snoozeAPI").factory("API",["$q","$http",function(a,b){_API={module:"flint",modules:[],routes:[{method:"get",path:"/contacts",response:null,request:null},{method:"get",path:"/contacts/requests",response:null,request:null},{method:"post",path:"/contacts/requests/new",response:null,request:null},{method:"put",path:"/contacts/requests/approve",response:null,request:null},{method:"put",path:"/contacts/requests/decline",response:null,request:null},{method:"get",path:"/experiences/list/:username",response:null,request:null},{method:"get",path:"/experiences/details/:id",response:null,request:null},{method:"post",path:"/experiences/new",response:null,request:null},{method:"put",path:"/experiences/update/:id",response:null,request:null},{method:"delete",path:"/experiences/delete/:id",response:null,request:null},{method:"put",path:"/geo/ping",response:null,request:null},{method:"get",path:"/geo/search",response:null,request:null},{method:"get",path:"/skills/:username",response:null,request:null},{method:"post",path:"/skills/new",response:null,request:null},{method:"delete",path:"/skills/delete/:name",response:null,request:null},{method:"get",path:"/users/details/:username",response:{200:{},404:{},500:{}},request:{params:{username:{type:"string",description:"Username of user.",example:"iamchairs"}}}},{method:"post",path:"/users/new",response:{201:"UserDTO",400:"MessageDTO",409:"MessageDTO",500:"MessageDTO"},request:{body:{username:{type:"string",description:"Username of user.",example:"iamchairs",required:!0},email:{type:"string",description:"Email of user.",example:"example@gmail.com",required:!0},password:{type:"string",description:"Password of user.",example:"password",required:!0}}}},{method:"put",path:"/users/save",response:{204:{},400:{},500:{}},request:{body:"UserDTO"}},{method:"get",path:"/users/search",response:null,request:{query:{username:{type:"string",description:"Search for like usernames",example:"iamchairs"},email:{type:"string",description:"Search for like emails",example:"example@gmail.com"}}}},{method:"resource",path:"/assets/userimages/**/*",response:null,request:null},{method:"resource",path:"/assets/userimages/*",response:null,request:null}],services:[],controllers:[],validators:[],dtos:[{name:"ContactDTO",properties:[{name:"id",type:"int",description:"id of contact row",example:"1","default":null,required:!1},{name:"user",type:"@UserDTO",description:"UserDTO Object",example:"@UserDTO","default":null,required:!1}],strict:!1},{name:"ExperienceDTO",properties:[{name:"id",type:"int",description:"id of experience",example:1,"default":null,required:!1},{name:"title",type:"string",description:"title of experience",example:"Logo Work For Apple","default":null,required:!1},{name:"company",type:"string",description:"name of company worked for",example:"Apple","default":null,required:!1},{name:"start",type:"int",description:"UTC Timestamp of start date",example:null,"default":null,required:!1},{name:"end",type:"int",description:"UTC Timestamp of end date",example:1,"default":null,required:!1},{name:"description",type:"string",description:"description of experience",example:"When through 87 revisions.","default":null,required:!1}],strict:!1},{name:"ExperienceCollectionDTO",properties:[{name:"experiences",type:"array",description:"array of @ExperienceDTO",example:"[@ExperienceDTO]","default":null,required:!1}],strict:!1},{name:"GeoDTO",properties:[{name:"lat",type:"number",description:"latitude of geolocation",example:30.12345,"default":null,required:!1},{name:"lng",type:"number",description:"longitude of geolocation",example:30.12345,"default":null,required:!1}],strict:!1},{name:"GeoSearchDTO",properties:[{name:"users",type:"array",description:"array of users returned from a geo search",example:"[@UserDTO]","default":null,required:!1}],strict:!1},{name:"MessageDTO",properties:[{name:"message",type:"string",description:"Message text.",example:"User is not logged in.","default":null,required:!1}],strict:!1},{name:"SkillDTO",properties:[{name:"id",type:"int",description:"id of the skill",example:1,"default":null,required:!1},{name:"name",type:"string",description:"name of the skill",example:"PHP","default":null,required:!1}],strict:!1},{name:"TestDTO",properties:[{name:"message",type:"string",description:"A message from the client.",example:"Hello World!","default":null,required:!1}],strict:!1},{name:"UserDTO",properties:[{name:"id",type:"int",description:"id of user",example:"1","default":null,required:!1},{name:"firstName",type:"string",description:"first name of user",example:"John","default":null,required:!1},{name:"lastName",type:"string",description:"last name of user",example:"Doe","default":null,required:!1},{name:"username",type:"string",description:"username of the user",example:"iamchairs","default":null,required:!1},{name:"email",type:"string",description:"email of the user",example:"example@gmail.com","default":null,required:!1},{name:"profession",type:"string",description:"profession of the user",example:"Software Engineer","default":null,required:!1},{name:"image",type:"string",description:"image url",example:"http://mysite.com/assets/images/default.jpg","default":null,required:!1}],strict:!1},{name:"UserSkillDTO",properties:[{name:"id",type:"int",description:"id of user skill",example:1,"default":null,required:!1},{name:"skillId",type:"int",description:"id of the the skill",example:1,"default":null,required:!1},{name:"skill",type:"string",description:"name of the skill",example:"PHP","default":null,required:!1}],strict:!1}]};var c="snooze API",d={},e={};_loadAPI=function(c){var d=a.defer();if("object"==typeof c){for(var e in c)_API[e]=angular.copy(c[e]);d.resolve()}else"string"==typeof c&&b.get(c).success(function(a){return _loadAPI(a)});return d.promise},_getAPI=function(){return _API},_getRoutes=function(){return d};var f=function(){return c},g=function(){for(var a in d)delete d[a];_.each(_API.routes,function(a){var b=a.path.split("/"),c=b[1];void 0===d[c]&&(d[c]={routes:[]}),d[c].routes.push(a)})},h=function(a){for(var b in e)delete e[b];_.each(_API.routes,function(b){var c=b.path.split("/"),d=c[1];d===a&&(e[b.path]=b)})},i=function(){return e},j=function(a){return _.find(_API.dtos,function(b){return b.name===a})};return g(),{loadAPI:_loadAPI,getAPI:_getAPI,getName:f,getRoutes:_getRoutes,selectRoute:h,getSelectedRoute:i,getDTO:j}}]);